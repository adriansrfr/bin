#!/bin/bash

function getbios
{
  sudo dmidecode -t bios -q;
}

function getterminal
{
#todo test for if neofetch installed
cyan="\033[1;34m" 
result=$(neofetch | grep Term| grep -iv font | awk  -F\: '{print $2 }')
printf "${cyan}Terminal: $result\n"
}

function getwindowmgr
{
  wmctrl -m | grep --color=always Name:;
}

function getcomputer
{
#todo test for if neofetch installed
neofetch; }
# cat /etc/os-release;
# neofetch; consider switching to freshfetch. Also screenfetch is installed.
# ~/.config/neofetch/config.conf

function getpath
{ echo "${PATH//:/$'\n'}"; }

function getdiskspace
{
  ncdu;
}

function getram
{
free -h;
echo "";
echo Memory intensive processes:;
echo "";
ps acxh -o cmd:15,%mem --sort=-%mem | head;
}

function hibernate
{
  #sudo systemctl suspend;
sudo  pm-suspend;
}

function getcpu
{
  lscpu | grep -E 'Model name|Socket|Thread|NUMA|CPU\(s\)';
}

function getsettings
{
  systemsettings </dev/null &>/dev/null &
}

function update
{
echo Updating,upgrading,autoremoving, and cleaning;
 sudo apt-get update;
 sudo apt-get upgrade -y;
 sudo apt-get autoremove;
 sudo apt-get clean;
 echo Done!!!
}

function gethd 
{
 # sudo df -h | grep -Eiv '(tmpfs|udev|loop)' 2>/dev/null ;
 #tee >(head -n 1) >(sleep 0.5;
 #df -h |  { head -1; grep -Eiv '(tmpfs|udev|loop)';}
 #> /dev/null; sleep 1.0 ;
  #df -a -P -h -T | ( read -r head; printf '%s\n' "$head"; grep -Eiv '(-|loop|tmpfs)')
  lsblk -fl -o NAME,FSTYPE,SIZE,FSAVAIL,FSUSE%,MOUNTPOINT,LABEL | ( read -r head; printf '%s\n' "$head";grep -Eiv '(-|loop|tmpfs)') |
  awk -F '[ ]' '($4!="") {print}'

}

function getusb
{
 # lsblk --help
 #df -h | ( read -r head; printf '%s\n' "$head"; grep --color=always -i multiboot);
 lsblk -fl -o NAME,FSTYPE,SIZE,FSAVAIL,FSUSE%,MOUNTPOINT,LABEL | ( read -r head; printf '%s\n' "$head"; grep --color=always -i multiboot) ;

}


function getrunningprograms
{
  ps -eo comm | sort -u
}


function getinstalledprograms
{
  dpkg -l | awk -F ' ' '{$1=$3=$4=""; print $0}'| sed 's/ //' | awk 'sub(" ", "\t")' | column -t -s "$(printf '\t')";
}


function upgradepip
{
  python3 -m pip install --upgrade pip
}
