#!/bin/bash



function AndroidTest
{
  case $OSTYPE in
    linux-android) echo "This is android!"
      ;;
    linux-gnu) echo "This is desktop!"
      ;;
    *) echo "This is unknown!"
    ;;
esac
}

function screensaver
{

if ps -eo command | pgrep -x 'xscreensaver'; then
    echo "xscreensaver is running"

  xscreensaver-command -activate & 
else
    echo "xscreensaver is not running"
    xscreensaver && sleep 1 &&  xscreensaver-command -activate & xscreensaver  
fi
}

function ComputerBios
{
  sudo dmidecode -t bios -q;
}

function TerminalGet
{
#todo test for if neofetch installed
cyan="\033[1;34m" 
result=$(neofetch | grep Term| grep -iv font ) ;
echo "$result"

}

function ComputerBios
{
  sudo dmidecode -t bios -q;
}

function TerminalGet
{
#todo test for if neofetch installed
cyan="\033[1;34m" 
result=$(neofetch | grep Term| grep -iv font | awk  -F\: '{print $2 }')
printf "${cyan}Terminal: $result\n"
}

function ComputerEnvironment
{ npx envinfo ; }

function ComputerWindowmgr
{
  wmctrl -m | grep --color=always Name:;
}

function ComputerGet
{
#todo test for if neofetch installed
neofetch; }
# cat /etc/os-release;
# neofetch; consider switching to freshfetch. Also screenfetch is installed.
# ~/.config/neofetch/config.conf

function PathGet
{ echo "${PATH//:/$'\n'}"; }

function ComputerDiskspace
{
  ncdu;
}

function ComputerRam
{
free -h;
echo "";
echo Memory intensive processes:;
echo "";
ps acxh -o cmd:15,%mem --sort=-%mem | head;
}

function hibernate
{
  #sudo systemctl suspend;
sudo  pm-suspend;
}

function ComputerCpu
{
  lscpu | grep -E 'Model name|Socket|Thread|NUMA|CPU\(s\)';
}

function ComputerSettings
{
  systemsettings </dev/null &>/dev/null &
}

function update
{
echo Updating,upgrading,autoremoving, and cleaning;
 sudo apt-get update;
 sudo apt-get upgrade -y;
 sudo apt-get autoremove;
 sudo apt-get clean;
 echo Done!!!
}

function ComputerHd 
{
 # sudo df -h | grep -Eiv '(tmpfs|udev|loop)' 2>/dev/null ;
 #tee >(head -n 1) >(sleep 0.5;
 #df -h |  { head -1; grep -Eiv '(tmpfs|udev|loop)';}
 #> /dev/null; sleep 1.0 ;
  #df -a -P -h -T | ( read -r head; printf '%s\n' "$head"; grep -Eiv '(-|loop|tmpfs)')
  lsblk -fl -o NAME,FSTYPE,SIZE,FSAVAIL,FSUSE%,MOUNTPOINT,LABEL | ( read -r head; printf '%s\n' "$head";grep -Eiv '(-|loop|tmpfs)') |
  awk -F '[ ]' '($4!="") {print}'

}

function ComputerUsb
{
 # lsblk --help
 #df -h | ( read -r head; printf '%s\n' "$head"; grep --color=always -i multiboot);
 lsblk -fl -o NAME,FSTYPE,SIZE,FSAVAIL,FSUSE%,MOUNTPOINT,LABEL | ( read -r head; printf '%s\n' "$head"; grep --color=always -i multiboot) ;

}


function ComputerProgramsRunning
{
  ps -eo comm | sort -u
}

function ComputerProgramKill
{

   kill -9 $(pidof "$1")  ;
}
function ComputerProgramsInstalled
{
  dpkg -l | awk -F ' ' '{$1=$3=$4=""; print $0}'| sed 's/ //' | awk 'sub(" ", "\t")' | column -t -s "$(printf '\t')" | fzf;
}


function PythonUpgradePip
{
  python3 -m pip install --upgrade pip
}
