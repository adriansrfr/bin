#!/bin/bash


function get-health {

pwsh -c import-csv -path '/home/adrian/Dropbox/vimwiki/CSV/Workout.csv' 

}







function add-exercise {
  # Import the CSV file
  workoutDatabase=$(awk -F, '{print $0}' '/home/adrian/Dropbox/vimwiki/CSV/Workout.csv')

  newRow=()

  # Loop to get user input
  while true; do
    # Get user input
    read -p "Enter the exercise: " exercise
    read -p "Enter the bodypart: " bodypart
    read -p "Enter the weight: " weight
    read -p "Enter the sets: " sets
    read -p "Enter the reps: " reps

    # Add the input to the newRow array
    newRow+=("$exercise,$bodypart,$weight,$sets,$reps")

    # Prompt the user to enter another exercise
    read -p "Enter another exercise? (y/n) " again
    if [ "${again,,}" != "y" ]; then
      break
    fi
  done

  # Append the newRow array to the workoutDatabase variable
  workoutDatabase="$workoutDatabase
  ${newRow[@]}"

  # Export the modified workoutDatabase variable to the CSV file
  echo "$workoutDatabase" > '/home/adrian/Dropbox/vimwiki/CSV/Workout.csv'

  # Output "Done!"
  echo "Done!"
}



# Define a list of words to use for tab completion
words=("apple" "banana" "orange" "grape")

# Define a function with a single argument
# The argument will have tab completion enabled
# function myfunc() {
#   local cur=${COMP_WORDS[COMP_CWORD]}
#   COMPREPLY=( $(compgen -W "${words[*]}" -- "$cur") )
# }
# 
# # Enable tab completion for the function
# complete -F myfunc myfunc

# Test the tab completion by calling the function
# myfunc
